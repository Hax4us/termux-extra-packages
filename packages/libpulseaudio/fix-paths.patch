diff -uNr pulseaudio-11.1/src/modules/echo-cancel/module-echo-cancel.c pulseaudio-11.1.mod/src/modules/echo-cancel/module-echo-cancel.c
--- pulseaudio-11.1/src/modules/echo-cancel/module-echo-cancel.c	2017-09-05 13:46:23.000000000 +0300
+++ pulseaudio-11.1.mod/src/modules/echo-cancel/module-echo-cancel.c	2017-11-25 23:06:12.274699979 +0200
@@ -2030,17 +2030,17 @@
 
     if (u->save_aec) {
         pa_log("Creating AEC files in /tmp");
-        u->captured_file = fopen("/tmp/aec_rec.sw", "wb");
+        u->captured_file = fopen("/data/data/com.termux/files/usr/tmp/aec_rec.sw", "wb");
         if (u->captured_file == NULL)
             perror ("fopen failed");
-        u->played_file = fopen("/tmp/aec_play.sw", "wb");
+        u->played_file = fopen("/data/data/com.termux/files/usr/tmp/aec_play.sw", "wb");
         if (u->played_file == NULL)
             perror ("fopen failed");
-        u->canceled_file = fopen("/tmp/aec_out.sw", "wb");
+        u->canceled_file = fopen("/data/data/com.termux/files/usr/tmp/aec_out.sw", "wb");
         if (u->canceled_file == NULL)
             perror ("fopen failed");
         if (u->ec->params.drift_compensation) {
-            u->drift_file = fopen("/tmp/aec_drift.txt", "w");
+            u->drift_file = fopen("/data/data/com.termux/files/usr/tmp/aec_drift.txt", "w");
             if (u->drift_file == NULL)
                 perror ("fopen failed");
         }
diff -uNr pulseaudio-11.1/src/modules/module-pipe-source.c pulseaudio-11.1.mod/src/modules/module-pipe-source.c
--- pulseaudio-11.1/src/modules/module-pipe-source.c	2017-09-05 12:33:13.000000000 +0300
+++ pulseaudio-11.1.mod/src/modules/module-pipe-source.c	2017-11-25 23:05:52.074377495 +0200
@@ -61,7 +61,7 @@
         "channels=<number of channels> "
         "channel_map=<channel map>");
 
-#define DEFAULT_FILE_NAME "/tmp/music.input"
+#define DEFAULT_FILE_NAME "/data/data/com.termux/files/usr/tmp/music.input"
 #define DEFAULT_SOURCE_NAME "fifo_input"
 
 struct userdata {
diff -uNr pulseaudio-11.1/src/modules/module-protocol-stub.c pulseaudio-11.1.mod/src/modules/module-protocol-stub.c
--- pulseaudio-11.1/src/modules/module-protocol-stub.c	2016-08-23 15:50:10.000000000 +0300
+++ pulseaudio-11.1.mod/src/modules/module-protocol-stub.c	2017-11-25 23:05:47.464303726 +0200
@@ -331,9 +331,9 @@
 #  if defined(USE_PROTOCOL_ESOUND)
 
 #    if defined(USE_PER_USER_ESOUND_SOCKET)
-    u->socket_path = pa_sprintf_malloc("/tmp/.esd-%lu/socket", (unsigned long) getuid());
+    u->socket_path = pa_sprintf_malloc("/data/data/com.termux/files/usr/tmp/.esd-%lu/socket", (unsigned long) getuid());
 #    else
-    u->socket_path = pa_xstrdup("/tmp/.esd/socket");
+    u->socket_path = pa_xstrdup("/data/data/com.termux/files/usr/tmp/.esd/socket");
 #    endif
 
     /* This socket doesn't reside in our own runtime dir but in
diff -uNr pulseaudio-11.1/src/pulsecore/core-util.c pulseaudio-11.1.mod/src/pulsecore/core-util.c
--- pulseaudio-11.1/src/pulsecore/core-util.c	2017-09-05 12:33:13.000000000 +0300
+++ pulseaudio-11.1.mod/src/pulsecore/core-util.c	2017-11-25 23:08:28.816850243 +0200
@@ -1831,7 +1831,7 @@
      * users, too. Since we need POSIX locking and UNIX sockets in
      * this directory, we try XDG_RUNTIME_DIR first, and if that isn't
      * set create a directory in $HOME and link it to a random subdir
-     * in /tmp, if it was not explicitly configured. */
+     * in @TERMUX_PREFIX@/tmp, if it was not explicitly configured. */
 
     m = pa_in_system_mode() ? 0755U : 0700U;
 
@@ -1904,7 +1904,7 @@
 
 #ifdef HAVE_SYMLINK
             /* Hmm, so the runtime directory didn't exist yet, so let's
-             * create one in /tmp and symlink that to it */
+             * create one in @TERMUX_PREFIX@/tmp and symlink that to it */
 
             if (make_random_dir_and_link(0700, k) < 0) {
 
@@ -3117,8 +3117,8 @@
     if ((f = pa_fopen_cloexec(PA_MACHINE_ID, "r")) ||
         (f = pa_fopen_cloexec(PA_MACHINE_ID_FALLBACK, "r")) ||
 #if !defined(OS_IS_WIN32)
-        (f = pa_fopen_cloexec("/etc/machine-id", "r")) ||
-        (f = pa_fopen_cloexec("/var/lib/dbus/machine-id", "r"))
+        (f = pa_fopen_cloexec("/data/data/com.termux/files/usr/etc/machine-id", "r")) ||
+        (f = pa_fopen_cloexec("/data/data/com.termux/files/usr/var/lib/dbus/machine-id", "r"))
 #else
         false
 #endif
@@ -3465,7 +3465,7 @@
         pa_is_path_absolute(t))
         return t;
 
-    return "/tmp";
+    return "/data/data/com.termux/files/usr/tmp";
 }
 
 int pa_open_cloexec(const char *fn, int flags, mode_t mode) {
diff -uNr pulseaudio-11.1/src/pulsecore/esound.h pulseaudio-11.1.mod/src/pulsecore/esound.h
--- pulseaudio-11.1/src/pulsecore/esound.h	2016-08-23 15:50:11.000000000 +0300
+++ pulseaudio-11.1.mod/src/pulsecore/esound.h	2017-11-25 23:05:38.554160960 +0200
@@ -23,8 +23,8 @@
 /* Most of the following is blatantly stolen from esound. */
 
 /* path and name of the default EsounD domain socket */
-#define ESD_UNIX_SOCKET_DIR     "/tmp/.esd"
-#define ESD_UNIX_SOCKET_NAME    "/tmp/.esd/socket"
+#define ESD_UNIX_SOCKET_DIR     "/data/data/com.termux/files/usr/tmp/.esd"
+#define ESD_UNIX_SOCKET_NAME    "/data/data/com.termux/files/usr/tmp/.esd/socket"
 
 /* length of the audio buffer size */
 #define ESD_BUF_SIZE (4 * 1024)
diff -uNr pulseaudio-11.1/src/pulsecore/shm.c pulseaudio-11.1.mod/src/pulsecore/shm.c
--- pulseaudio-11.1/src/pulsecore/shm.c	2017-09-05 12:33:13.000000000 +0300
+++ pulseaudio-11.1.mod/src/pulsecore/shm.c	2017-11-25 23:07:51.166262068 +0200
@@ -67,7 +67,7 @@
 /* On Linux we know that the shared memory blocks are files in
  * /dev/shm. We can use that information to list all blocks and
  * cleanup unused ones */
-#define SHM_PATH "/dev/shm/"
+#define SHM_PATH "/data/data/com.termux/files/usr/tmp/"
 #define SHM_ID_LEN 10
 #elif defined(__sun)
 #define SHM_PATH "/tmp"
